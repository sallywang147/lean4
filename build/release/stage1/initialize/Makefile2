# Makefile_init: Compile init.cpp to WebAssembly

# Define the home directory variable
HOME_DIR = /home/sally

# Compiler and flags
CXX      = /usr/local/share/wasm-toolchain/sysroot/bin/clang++
CXXFLAGS = -Os -D_WASI_EMULATED_MMAN -include fstream \
           -I$(HOME_DIR)/lean4/build/release/stage1/include \
           -I$(HOME_DIR)/lean4/src \
           -I$(HOME_DIR)/lean4/build/release/stage1

# Source and output directories
SRCDIR   = $(HOME_DIR)/lean4/src/initialize
WASM_OUT = $(HOME_DIR)/lean4/build/release/stage1/initialize/CMakeFiles/wasm.dir

# Source file and target wasm file
SOURCE   = $(SRCDIR)/init.cpp
TARGET   = $(WASM_OUT)/init.wasm

# Default target builds the wasm file
all: $(TARGET)

# Ensure the output directory exists
$(WASM_OUT):
	mkdir -p $(WASM_OUT)

# Rule: compile init.cpp into init.wasm
$(TARGET): $(SOURCE) | $(WASM_OUT)
	$(CXX) $(CXXFLAGS) $(SOURCE) -o $(TARGET) -lwasi-emulated-mman

# Clean up generated files
clean:
	rm -f $(TARGET)

.PHONY: all clean
